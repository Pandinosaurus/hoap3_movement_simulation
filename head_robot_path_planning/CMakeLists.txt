# Generated by "mkproy.sh" v0.3
CMAKE_MINIMUM_REQUIRED (VERSION 2.6)
SET(CMAKE_BUILD_TYPE Debug)
SET(KEYWORD head_robot_path_planning)

# Start a project
PROJECT(${KEYWORD})

find_package(OpenRAVE REQUIRED)
find_package(Boost ${OpenRAVE_Boost_VERSION} EXACT COMPONENTS iostreams python thread)

include_directories(${OpenRAVE_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR} )
if( Boost_INCLUDE_DIRS )
  include_directories(${Boost_INCLUDE_DIRS})
endif()
link_directories(${OpenRAVE_LIBRARY_DIRS} ${Boost_LIBRARY_DIRS})


# Default build mode is RelWithDebInfo
IF( STREQUAL )
  SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING build type default to RelWithDebInfo, set to Release to improve performance FORCE)
ENDIF( STREQUAL )

# Define system type
IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
        #ADD_DEFINITIONS(-DSYSTEMTYPE_LINUX)
	# Set system folder name
	set(SYSTEM_FOLDER_NAME linux)
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	#ADD_DEFINITIONS(-DSYSTEMTYPE_WINDOWS)
	# Set system folder name
	set(SYSTEM_FOLDER_NAME windows)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")   

# Define standard paths.
set(MY_OUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/out/${SYSTEM_FOLDER_NAME})
set(MY_SRC_PATH ${CMAKE_CURRENT_SOURCE_DIR}/src) 

# Search for source code.
FILE(GLOB_RECURSE folder_source ${MY_SRC_PATH}/*.cpp)
FILE(GLOB_RECURSE folder_header ${MY_SRC_PATH}/*.h)
SOURCE_GROUP("Source Files" FILES ${folder_source})
SOURCE_GROUP("Header Files" FILES ${folder_header})

# Automatically add include directories if needed.
FOREACH(header_file ${folder_header})
  GET_FILENAME_COMPONENT(p ${header_file} PATH)
  INCLUDE_DIRECTORIES(${p})
ENDFOREACH(header_file ${folder_header})

# Set location for binary output
set(EXECUTABLE_OUTPUT_PATH ${MY_OUT_PATH})

# Set up our main executable.
IF (folder_source)
  ADD_EXECUTABLE(${KEYWORD} ${folder_source} ${folder_header})
ELSE (folder_source)
  MESSAGE(FATAL_ERROR "No source code files found. Please add something")
ENDIF (folder_source)

# Link executable to external libraries
target_link_libraries (${KEYWORD} ${OpenRAVE_LIBRARIES} ${OpenRAVE_CORE_LIBRARIES} ${Boost_THREAD_LIBRARY} ${PCL_LIBRARIES})
IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
 #ADD_DEFINITIONS(-DSYSTEMTYPE_LINUX)
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
 #target_link_libraries (${KEYWORD} ACE) # ACEd for debug on win32
 #target_link_libraries (${KEYWORD} winmm)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

